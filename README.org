#+TITLE: SimArgs
#+DATE: 2022-12-07T22:56:41+0800
#+LASTMOD: 2022-12-07T22:56:41+0800
#+AUTHOR: Jiacai Liu
#+EMAIL: dev@liujiacai.net
#+OPTIONS: toc:nil num:nil
#+STARTUP: content

[[https://github.com/jiacai2050/simargs/actions/workflows/CI.yml][https://github.com/jiacai2050/simargs/actions/workflows/CI.yml/badge.svg]]

A simple, opinionated, struct-based argument parser in Zig, taking full advantage of [[https://kristoff.it/blog/what-is-zig-comptime/][comptime]].

Blog post explaining how =simargs= is implemented:
- [[https://en.liujiacai.net/2022/12/14/argparser-in-zig/][What I learn by implementing argparser in Zig]]
* Features
- Supported data type:
  - All [[https://ziglang.org/documentation/master/#Primitive-Types][primitive types]], such as =i8=, =f32=, =bool=
  - =[]const u8=
  - =Enum=
- Optional fields and fields with default value mean they are optional arguments
- Use =comptime= as possible as I can
- Provide =print_help()= out of the box
* Usage
See [[file:demo.zig]]

#+begin_src bash :results verbatim :exports both
# Run demo
zig build && ./zig-out/bin/demo -o /tmp/a.out --user-agent Firefox hello world 2>&1
#+end_src

#+RESULTS:
#+begin_example
------------------------------Program------------------------------
./zig-out/bin/demo

------------------------------Arguments------------------------------
   verbose: null
user-agent: demo.main__struct_1663.main__struct_1663__enum_1761.Firefox
   timeout: 30
    output: /tmp/a.out

------------------------------Positionals------------------------------
1: hello
2: world

------------------------------print_help------------------------------
 USAGE:
     ./zig-out/bin/demo [OPTIONS] [--] [file]

 OPTIONS:
	-v, --verbose                     Make the operation more talkative
	-A, --user-agent STRING            (valid: Chrome|Firefox|Safari)(default: Firefox)
	    --timeout INTEGER             Max time this request can cost(default: 30)
	-o, --output STRING               Write to file instead of stdout(required)
#+end_example
* Install
Add =simargs= to your projects via submodule, and in =build.zig= add
#+begin_src zig
exe.addPackagePath("simargs", "libs/simargs/src/simargs.zig");
#+end_src
Then import like this in your Zig code:
#+begin_src zig
const simargs = @import("simargs");
#+end_src

* Who's Using
- [[https://github.com/jiacai2050/loc][jiacai2050/loc: Lines of code in Zig]]

If youâ€™d like to be added to this list, welcome to [[https://github.com/jiacai2050/simargs/pulls][open a PR]].
* Acknowledgment
When implement =simargs=, I refer following projects to learn how to write
idiomatic Zig code. Big Thanks!
- [[https://github.com/MasterQ32/zig-args/][MasterQ32/zig-args]]
- [[https://github.com/Hejsil/zig-clap][Hejsil/zig-clap]]
- [[https://github.com/evangrayk/zig-argparse][evangrayk/zig-argparse]]
